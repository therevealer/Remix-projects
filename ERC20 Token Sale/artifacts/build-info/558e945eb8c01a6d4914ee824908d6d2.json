{
	"id": "558e945eb8c01a6d4914ee824908d6d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20 Token Sale/ERC-Token.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.21;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// contract TokenFunctionalities{\n\n// function name() public view returns (string memory) {\n// }\n\n\n// // function symbol() public view returns (string)\n// // function decimals() public view returns (uint8)\n// // function totalSupply() public view returns (uint256)\n// // function balanceOf(address _owner) public view returns (uint256 balance)\n// // function transfer(address _to, uint256 _value) public returns (bool success)\n// // function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)\n// // function approve(address _spender, uint256 _value) public returns (bool success)\n// // function allowance(address _owner, address _spender) public view returns (uint256 remaining)\n\n// // event Transfer(address indexed _from, address indexed _to, uint256 _value)\n// // event Approval(address indexed _owner, address indexed _spender, uint256 _value)\n\n\n// }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"ERC20 Token Sale/ERC-Token.sol": {
				"ast": {
					"absolutePath": "ERC20 Token Sale/ERC-Token.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:0"
						}
					],
					"src": "31:928:0"
				},
				"id": 0
			}
		}
	}
}